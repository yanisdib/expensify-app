{"version":3,"sources":["components/Header/Header.jsx","Expensify.js","components/Pages/Expenses/ExpensesListItems.js","selectors/expenses.js","components/Pages/Expenses/ExpenseList.js","components/Pages/Expenses/ExpenseListFilters.js","actions/filters.js","components/Pages/Dashboard/Dashboard.jsx","components/Pages/Dashboard/AddExpense/ExpenseForm.js","components/Pages/Dashboard/AddExpense/AddExpense.jsx","actions/expenses.js","components/Pages/Dashboard/EditExpense/EditExpense.jsx","components/Pages/Help/Help.jsx","components/Pages/Error/NotFound.jsx","routers/AppRouter.js","reducers/expenses.js","reducers/filters.js","serviceWorker.js","index.js","store/configureStore.js"],"names":["Header","to","activeClassName","exact","Expensify","ExpenseListItems","dispatch","id","description","amount","createdAt","note","expenses","text","sortBy","startDate","endDate","filter","expense","createdAtMoment","moment","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","textMatch","toLowerCase","includes","sort","a","b","connect","state","selectExpenses","filters","props","length","map","ExpensesListItems","key","ExpenseListFilters","calendarFocused","onDatesChange","setStartDate","setEndDate","onFocusChange","setState","onTextChange","e","setTextFilter","target","value","console","log","onSortChange","sortByDate","sortByAmount","type","this","onChange","focusedInput","showClearDates","numberOfMonths","isOutsideRange","React","Component","undefined","Dashboard","currentDate","format","ExpenseForm","onDescriptionChange","onNoteChange","onAmountChange","match","onDateChange","focused","onSubmit","preventDefault","parseFloat","valueOf","error","toString","name","placeholder","autoFocus","date","AddExpense","addExpense","history","push","uuid","EditExpense","editExpense","onClick","removeExpense","find","params","updates","Help","NotFound","AppRouter","path","component","expensesReducerDefaultState","action","filtersReducerDefaultStateValue","startOf","endOf","Boolean","window","location","hostname","store","createStore","combineReducers","expensesReducer","filtersReducer","__REDUX_DEVTOOLS_EXTENSION__","jsx","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d16936a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => (\r\n    <header>\r\n        <h1>Expensify</h1>\r\n        <NavLink to=\"/\" activeClassName=\"is-active\" exact={true}>Home</NavLink>\r\n        <NavLink to=\"/dashboard\" activeClassName=\"is-active\">Dashboard</NavLink>\r\n        <NavLink to=\"/create\" activeClassName=\"is-active\">Add an expense</NavLink>\r\n        <NavLink to=\"/help\" activeClassName=\"is-active\">Help</NavLink>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import React from 'react';\nimport 'react-dates/lib/css/_datepicker.css';\n\n\nfunction Expensify() {\n  return (\n    <div>\n    </div>\n  );\n}\n\nexport default Expensify;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst ExpenseListItems = ({ dispatch, id, description, amount, createdAt, note }) => (\r\n    <div>\r\n        <Link to={`/edit/${id}`}>\r\n            <h3>{description}</h3>\r\n        </Link>\r\n        <p>{amount} - {createdAt}</p>\r\n        <p>{note}</p>\r\n    </div>\r\n);\r\n\r\nexport default ExpenseListItems;\r\n","/* eslint-disable array-callback-return */\r\n\r\nimport moment from \"moment\";\r\n\r\n// Get visible expenses\r\nexport default (expenses, { text, sortBy, startDate, endDate }) => {\r\n    return expenses.filter((expense) => {\r\n        const createdAtMoment = moment(expense.createdAt);\r\n        // const startDateMatch = typeof startDate !== 'number' || expense.createdAt >= startDate;\r\n        // const endDateMatch = typeof endDate !== 'number' || expense.createdAt <= endDate;\r\n        const startDateMatch = startDate ? startDate.isSameOrBefore(createdAtMoment, 'day') : true; // if our expense's createdAt is smaller than startDate, it is filtered out.\r\n        const endDateMatch = endDate ? endDate.isSameOrAfter(createdAtMoment, 'day') : true;     // if our expense's createdAt is greater or same as endDate, it is filtered out.\r\n        const textMatch = expense.description.toLowerCase().includes(text.toLowerCase());\r\n        return startDateMatch && endDateMatch && textMatch;\r\n    }).sort((a, b) => {\r\n        if (sortBy === 'date') {\r\n            return a.createdAt < b.createdAt ? 1 : -1;\r\n        } else if (sortBy === 'amount') {\r\n            return a.amount < b.amount ? 1 : -1;\r\n        }\r\n    });\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ExpensesListItems from './ExpensesListItems';\r\nimport selectExpenses from '../../../selectors/expenses';\r\n\r\n\r\nexport const ExpenseList = (props) => (\r\n    <div>\r\n        {\r\n            props.expenses.length !== 0 ? (\r\n                props.expenses.map((expense) => {\r\n                    return <ExpensesListItems key={expense.id} {...expense} />\r\n                })\r\n            ) : (\r\n                    <p>No expenses...</p>\r\n                )\r\n        }\r\n    </div>\r\n);\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        expenses: selectExpenses(state.expenses, state.filters)\r\n    };\r\n};\r\n// What we want to connect\r\n// Function - Define what info we want to access from the store\r\nexport default connect(mapStateToProps)(ExpenseList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport { setTextFilter, sortByDate, sortByAmount, setStartDate, setEndDate } from '../../../actions/filters';\r\n\r\nexport class ExpenseListFilters extends React.Component {\r\n    state = {\r\n        calendarFocused: null,\r\n    };\r\n    // Manage Dates change \r\n    // An object is passed\r\n    onDatesChange = ({ startDate, endDate }) => {\r\n        this.props.setStartDate(startDate);\r\n        this.props.setEndDate(endDate);\r\n    };\r\n    onFocusChange = (calendarFocused) => {\r\n        this.setState(() => ({ calendarFocused }));\r\n    };\r\n    onTextChange = (e) => {\r\n        this.props.setTextFilter(e.target.value);\r\n        console.log(e.target.value);\r\n    };\r\n    onSortChange = (e) => {\r\n        if (e.target.value === \"date\") {\r\n            this.props.sortByDate();\r\n        } else if (e.target.value === 'amount') {\r\n            this.props.sortByAmount();\r\n\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label>Search: </label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={this.props.filters.text}\r\n                    onChange={this.onTextChange} />\r\n                <label>\r\n                    Sort by:\r\n        </label>\r\n                <select\r\n                    value={this.props.filters.sortBy}\r\n                    onChange={this.onSortChange}\r\n                >\r\n                    <option value=\"date\">\r\n                        Date\r\n            </option>\r\n                    <option value=\"amount\">\r\n                        Amount\r\n            </option>\r\n                </select>\r\n                <DateRangePicker\r\n                    startDate={this.props.filters.startDate}\r\n                    endDate={this.props.filters.endDate}\r\n                    onDatesChange={this.onDatesChange}\r\n                    focusedInput={this.state.calendarFocused}\r\n                    onFocusChange={this.onFocusChange}\r\n                    showClearDates={true}\r\n                    numberOfMonths={1}\r\n                    isOutsideRange={() => false}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    filters: state.filters\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setTextFilter: (text) => dispatch(setTextFilter(text)),\r\n    sortByAmount: () => dispatch(sortByAmount()),\r\n    sortByDate: () => dispatch(sortByDate()),\r\n    setStartDate: (startDate) => dispatch(setStartDate(startDate)),\r\n    setEndDate: (endDate) => dispatch(setEndDate(endDate))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseListFilters);","// SET_TEXT_FILTER\r\nexport const setTextFilter = (text = '') => ({\r\n    type: 'SET_TEXT_FILTER',\r\n    text\r\n});\r\n\r\n// SORT_BY_DATE\r\nexport const sortByDate = () => ({\r\n    type: 'SORT_BY_DATE'\r\n});\r\n\r\n// SORT_BY_AMOUNT\r\nexport const sortByAmount = () => ({\r\n    type: 'SORT_BY_AMOUNT'\r\n});\r\n\r\n// SET_START_DATE\r\n\r\nexport const setStartDate = (startDate = undefined) => ({\r\n    type: 'SET_START_DATE',\r\n    startDate\r\n});\r\n// SET_END_DATE\r\nexport const setEndDate = (endDate = undefined) => ({\r\n    type: 'SET_END_DATE',\r\n    endDate\r\n});","import React from 'react';\r\nimport ConnectedExpenseList from '../Expenses/ExpenseList';\r\nimport ExpenseListFilters from '../Expenses/ExpenseListFilters';\r\n\r\nconst Dashboard = () => (\r\n    <div>\r\n        <ExpenseListFilters />\r\n        <ConnectedExpenseList />\r\n    </div>\r\n);\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport moment from 'moment';\r\nimport { SingleDatePicker } from 'react-dates';\r\n\r\nlet currentDate = moment();\r\nconsole.log(currentDate.format('MMM Do, YYYY'));\r\n\r\nexport default class ExpenseForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            description: props.expense ? props.expense.description : '',\r\n            amount: props.expense ? (props.expense.amount).toString() : '',\r\n            note: props.expense ? props.expense.note : '',\r\n            createdAt: props.expense ? moment(props.expense.createdAt) : moment(),\r\n            calendarFocused: false,\r\n            error: ''\r\n        };\r\n    };\r\n\r\n    onDescriptionChange = (e) => {\r\n        const description = e.target.value;\r\n        this.setState(() => ({ description }));\r\n    };\r\n    onNoteChange = (e) => {\r\n        const note = e.target.value;\r\n        this.setState(() => ({ note }));\r\n    };\r\n\r\n    onAmountChange = (e) => {\r\n        const amount = e.target.value;\r\n        if (!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/)) { // allow to clear the value\r\n            this.setState(() => ({ amount }));\r\n        };\r\n    };\r\n\r\n    onDateChange = (createdAt) => {\r\n        if (createdAt) {\r\n            this.setState(() => ({ createdAt }));\r\n        };\r\n    };\r\n\r\n    onFocusChange = ({ focused }) => {\r\n        this.setState(() => ({ calendarFocused: focused }));\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.description || !this.state.amount) {\r\n            // Set error state equal to 'Please provide description and amount.'\r\n            this.setState(() => ({ error: 'Please provide a description and an amount.' }));\r\n            console.log(this.state.error);\r\n        } else {\r\n            // Clear the error\r\n            this.props.onSubmit({\r\n                description: this.state.description,\r\n                amount: parseFloat(this.state.amount, 10),\r\n                createdAt: this.state.createdAt.valueOf(),\r\n                note: this.state.note\r\n\r\n            });\r\n            this.setState(() => ({ error: '' }));\r\n            console.log('Submitted!');\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.error && <p>{this.state.error}</p>}\r\n                <form onSubmit={this.onSubmit}>\r\n                    <label>Description</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"description\"\r\n                        placeholder=\"Description\"\r\n                        value={this.state.description}\r\n                        onChange={this.onDescriptionChange}\r\n                        autoFocus\r\n                    />\r\n                    <label>Amount</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"amount\"\r\n                        placeholder=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.onAmountChange}\r\n                    />\r\n                    <SingleDatePicker\r\n                        date={this.state.createdAt}\r\n                        onDateChange={this.onDateChange}\r\n                        focused={this.state.calendarFocused}\r\n                        onFocusChange={this.onFocusChange}\r\n                        numberOfMonths={1}\r\n                        isOutsideRange={() => false}\r\n                    />\r\n                    <textarea\r\n                        placeholder=\"Note for your expense\"\r\n                        value={this.state.note}\r\n                        onChange={this.onNoteChange}\r\n                    >\r\n                    </textarea>\r\n                    <button>Ajouter</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport { connect } from 'react-redux';\r\nimport { addExpense } from '../../../../actions/expenses';\r\n\r\nexport class AddExpense extends React.Component {\r\n    onSubmit = (expense) => {\r\n        // props.dispatch(addExpense(expense));\r\n\r\n        this.props.addExpense(expense);\r\n        this.props.history.push('/dashboard');\r\n    };\r\n    render() { \r\n        return (\r\n            <div>\r\n                <h3>Add an expense</h3>\r\n                <ExpenseForm onSubmit={this.onSubmit} />\r\n            </div>\r\n        )\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addExpense: (expense) => dispatch(addExpense(expense))\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(AddExpense);","import uuid from 'uuid';\r\n\r\n\r\n// ADD_EXPENSE\r\nexport const addExpense = (\r\n    {\r\n        description = '',\r\n        note = '',\r\n        amount = 0,\r\n        createdAt = 0\r\n    } = {}\r\n) => ({\r\n    type: 'ADD_EXPENSE',\r\n    expenses: {\r\n        id: uuid(),\r\n        description,\r\n        note,\r\n        amount,\r\n        createdAt\r\n    }\r\n});\r\n\r\n// REMOVE_EXPENSE\r\nexport const removeExpense = ({ id } = {}) => (\r\n    {\r\n        type: 'REMOVE_EXPENSE',\r\n        id\r\n    });\r\n\r\n// EDIT_EXPENSE\r\nexport const editExpense = (id, updates) => (\r\n    {\r\n        type: 'EDIT_EXPENSE',\r\n        id,\r\n        updates\r\n    });\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ExpenseForm from '../AddExpense/ExpenseForm';\r\nimport { editExpense, removeExpense } from '../../../../actions/expenses';\r\n\r\nexport class EditExpense extends React.Component {\r\n    onSubmit = (expense) => {\r\n        this.props.editExpense(this.props.expense.id, expense);\r\n        this.props.history.push('/dashboard');\r\n    };\r\n    onClick = () => {\r\n        this.props.removeExpense({ id: this.props.expense.id });\r\n        this.props.history.push('/dashboard');\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* Editing the work with ID of {props.match.params.id} */\r\n                }\r\n                <ExpenseForm\r\n                    expense={this.props.expense}\r\n                    onSubmit={this.onSubmit}\r\n                />\r\n                <button\r\n                    onClick={this.onClick}>\r\n                    Remove\r\n            </button>\r\n            </div>\r\n        )\r\n    };\r\n};\r\n// const EditExpense = (props) => {\r\n//     return (\r\n\r\n//     )\r\n// };\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        expense: state.expenses.find((expense) => expense.id === props.match.params.id)\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => ({\r\n    editExpense: (id, expense) => dispatch(editExpense(id, expense)),\r\n    removeExpense: (expense) => dispatch(removeExpense(expense))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditExpense);","import React from 'react';\r\n\r\nconst Help = () => (\r\n    <div>\r\n        Help\r\n    </div>\r\n);\r\n\r\nexport default Help;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        404 Not found\r\n        <br />\r\n        <Link to=\"/\">Back to home</Link>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from '../components/Header/Header';\r\nimport Expensify from '../Expensify';\r\nimport Dashboard from '../components/Pages/Dashboard/Dashboard';\r\nimport AddExpense from '../components/Pages/Dashboard/AddExpense/AddExpense';\r\nimport EditExpense from '../components/Pages/Dashboard/EditExpense/EditExpense';\r\nimport Help from '../components/Pages/Help/Help';\r\nimport NotFound from '../components/Pages/Error/NotFound';\r\n\r\n\r\n\r\nconst AppRouter = () => (\r\n    <BrowserRouter>\r\n        <div>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" component={Expensify} exact={true} />\r\n                <Route path=\"/dashboard\" component={Dashboard} />\r\n                <Route path=\"/create\" component={AddExpense} />\r\n                <Route path=\"/edit\" component={EditExpense} exact={true} />\r\n                <Route path=\"/edit/:id\" component={EditExpense} />\r\n                <Route path=\"/help\" component={Help} />\r\n                <Route component={NotFound} />\r\n            </Switch>\r\n        </div>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default AppRouter;","// Expenses reducers\r\nconst expensesReducerDefaultState = [];\r\nexport default (state = expensesReducerDefaultState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_EXPENSE':\r\n            return [\r\n                ...state,\r\n                action.expenses\r\n            ];\r\n        case 'EDIT_EXPENSE':\r\n            return state.map((expense) => {\r\n                if (expense.id === action.id) {\r\n                    return { \r\n                        ...expense, \r\n                        ...action.updates \r\n                    };\r\n                } else {\r\n                    return expense;\r\n                };\r\n            });\r\n        case 'REMOVE_EXPENSE':\r\n            return state.filter(({ id }) => id !== action.id);\r\n        default:\r\n            return state;\r\n    }\r\n};","/* eslint-disable no-lone-blocks */\r\n// Filters reducer\r\n\r\nimport moment from 'moment';\r\n\r\nconst filtersReducerDefaultStateValue = {\r\n    text: '',\r\n    sortBy: 'date',\r\n    startDate: moment().startOf('month'),\r\n    endDate: moment().endOf('month')\r\n};\r\n\r\nexport default (state = filtersReducerDefaultStateValue, action) => {\r\n    switch (action.type) {\r\n        case 'SET_TEXT_FILTER':\r\n            return {\r\n                ...state,\r\n                text: action.text\r\n            };\r\n        case 'SORT_BY_DATE': {\r\n            return { ...state, sortBy: 'date' };\r\n        };\r\n        case 'SORT_BY_AMOUNT': {\r\n            return { ...state, sortBy: 'amount' };\r\n        };\r\n        case 'SET_START_DATE': {\r\n            return { ...state, startDate: action.startDate };\r\n        };\r\n        case 'SET_END_DATE': {\r\n            return { ...state, endDate: action.endDate };\r\n        };\r\n        default: return state;\r\n    }\r\n};\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppRouter from './routers/AppRouter';\nimport configureStore from './store/configureStore';\nimport * as serviceWorker from './serviceWorker';\nimport { addExpense } from './actions/expenses';\nimport { setTextFilter } from './actions/filters';\nimport getVisibleExpenses from './selectors/expenses';\n\nconst store = configureStore();\n\n// store.dispatch(setTextFilter('water'));\n\n// setTimeout(() => {\n//     store.dispatch(setTextFilter('bill'));\n// }, 3000);\n\nconst jsx = (\n    <Provider store={store}>\n        <AppRouter />\n    </Provider>\n)\n\nReactDOM.render(jsx, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, combineReducers } from 'redux';\r\nimport expensesReducer from '../reducers/expenses';\r\nimport filtersReducer from '../reducers/filters';\r\n\r\n//Store creation\r\n\r\nexport default () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            expenses: expensesReducer,\r\n            filters: filtersReducer\r\n        }),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n    return store;\r\n};\r\n"],"sourceRoot":""}